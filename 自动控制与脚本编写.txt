	---------------------------《自动操控与脚本编写》---------------------------
作者：Mrright
功能：自动管理与运行

		该功能提供给用户以自动化方式执行RO命令，使用者可以根据自己的需求编写脚本
	实现自动操作，可以实现大批量机器的自动部署环境，并且可以制定脚本执行计划，下面将
	从打开该面板开始认识该模块，可以使用macro命令来打开脚本管理器，于是你可以看到加载
	的所有脚本，最下面一栏是菜单，你可以选择一项进行相应的操作，只需输入旁边的符号就可
	以执行操作，例如输入r，系统会提示输入“目标”，此时输入对应的对象名（文件）就可以
	执行操作，接下来你将会学到脚本编写：

	输入N新建脚本会弹出记事本程序，编辑完成后Ctrl+s保存后关掉记事本即可。

语法》》：
	脚本语言必须每句语句占一行，一行不允许出现两行语句
	注释：
	
	RO中的脚本使用#表示注释，#后面的内容系统将不会执行该部分内容，脚本注释只允许出现在一
	行的开头并且顶格，前面不允许有空格字符
	例如》》：

	#这是我的第一个RO脚本

	上面这句话在系统中不会被执行
	变量》》：
	RO中的脚本使用$+名字表示变量的声明
	
		变量声明：$name=Mrright
	声明变量时需要立即赋值，变量必须使用实际值进行赋值操作，赋值操作将右边的值赋值给左
	边的变量，不能使用变量对变量进行赋值，例如：
		错误赋值操作：$name=$a
	这样的赋值将会被系统认定为值而不是变量，变量分为普通变量和参数变量，普通变量存储固有
	的值，而参数变量则存储一个参数列表，参数变量可以使用一个绝对路径的文件名进行传递，
	文件为文本文件，每一行为一个参数，
		参数变量声明方式：$name={文件的绝对路径}
	
	语句》》：
	
	语句为真实执行体，语句通常和变量同时使用，例如：
	$name=Mrright
	
	echo 你好，我是$name					解释：echo是输出打印语句

	输出结果：你好，我是Mrright

	这里的变量使用了普通变量，而如果使用参数变量那么这句语句将可能输出多次，例如有一个参数
	列表的绝对路径为D:/project/name.txt，该文件中共有4个参数，分别为Jobs，Mrright,Dennis
	和Carter，我们可以创建一个参数变量来使用它：
	$name={D:/project/name.txt}
	echo 你好，我是$name
	
	输出结果：
		你好，我是Jobs
		你好，我是Mrright
		你好，我是Dennis
		你好，我是Carter
	这时，一条语句被执行了四次，而如果一条语句中包含两个或多个参数列表时，理论上会执行参数
	1*参数2次，例如如果一个参数列表有4个参数，而另一个参数列表有3个，那么会执行12次，但是去
	除重复执行的只会执行11次，而特别注意的是，单句中不可引用相同名称的多个变量，例如下面的
	语句是不被允许的：
		echo 我是$name $name				解释：引用相同的变量不被允许


								lastUpdate:2019/8/25
	
	
	
	
	
	